{
   "GetTeamsQuery" : "query GetTeamsQuery($limit: Int, $after: Cursor) {queryTeams(limit: $limit, after: $after) {        teamEdges {          privileges          roles {            ...RoleFragment            __typename          }          team {            ...TeamFragment            __typename          }          __typename        }        pageInfo {          end          more          __typename        }        __typename      }    }        fragment RoleFragment on Role {      id      name      global      privileges      __typename    }        fragment TeamFragment on Team {      id      name      picture      description      owner {        __typename        ...ProfileFragment      }      activeSession      __typename    }        fragment ProfileFragment on Profile {      __typename      id      alias      picture    }    ",

   "GetVideosQuery" : "query GetVideosQuery($teamId: ID, $limit: Int, $after: Cursor) {  queryVideos(teamId: $teamId, limit: $limit, after: $after) {    videos {      ...VideoFragment      __typename    }    pageInfo {      ...PageInfoFragment      __typename    }    __typename  }}fragment VideoFragment on Video {  id  created  filesize  name  streamUrl  remoteUrl  error  thumbnail  progress {    current    rate    total    __typename  }  uploaded  tags  duration  comments  public  owner {    ...OwnerFragment    __typename  }  userMetadata {    ...MetadataEntryFragment    __typename  }  latestAnalysis {    ...AnalysisFragment    __typename  }  __typename}fragment OwnerFragment on Owner {  __typename  ... on Self {    name    alias    email    picture    __typename  }  ... on Profile {    alias    picture    __typename  }  ... on Team {    id    name    picture    __typename  }}fragment MetadataEntryFragment on MetadataEntry {  name  value  __typename}fragment AnalysisFragment on Analysis {  id  type  created  completed  progress {    current    rate    total    __typename  }  result {    matches {      id      __typename    }    __typename  }  error  __typename}fragment PageInfoFragment on QueryPageInfo {  end  more  __typename}",

   "GetOverwatchPrimaryRosterPlayerStatisticsV2Query" : "query GetOverwatchPrimaryRosterPlayerStatisticsV2Query($teamId: ID, $videoIds: [ID!]) {  statistics(teamId: $teamId, type: OVERWATCH, videoIds: $videoIds) {    ... on OverwatchStatistics {      __typename      primaryRosterV2 {        name        players {          ...OverwatchPlayerStatisticsV2Fragment          __typename        }        __typename      }    }    __typename  }}fragment OverwatchPlayerStatisticsV2Fragment on OverwatchPlayerStatisticsV2 {  playerId  playerName  kills  deaths  ults  time  firstDeaths  firstKills  firstUlts  assists  heroes {    ...OverwatchPlayerHeroStatisticsFragment    __typename  }  __typename}fragment OverwatchPlayerHeroStatisticsFragment on OverwatchPlayerHeroStatistics {  name  teamfights  firstKills  firstDeaths  ults  firstUlts  totalChargeTime  numUltCharge  totalHoldTime  time  kills  deaths  assists  __typename}",

   "GetMatchesByIdQuery" : "query GetMatchesByIdQuery($ids: [ID!]!) {  matches(ids: $ids) {    ...MatchFragment    __typename  }}fragment MatchFragment on Match {  __typename  id  created  owner {    ...OwnerFragment    __typename  }  name  userMetadata {    name    value    __typename  }  ... on UserMatch {    video {      id      __typename    }    startTime    endTime    __typename  }  ... on GeneratedOverwatchMatch {    gvideo: video {      id      __typename    }    analysis {      id      __typename    }    gstartTime: startTime    gendTime: endTime    data    __typename  }}fragment OwnerFragment on Owner {  __typename  ... on Self {    name    alias    email    picture    __typename  }  ... on Profile {    alias    picture    __typename  }  ... on Team {    id    name    picture    __typename  }}"

}
